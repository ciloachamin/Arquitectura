//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConversorLongitudServicioReferencia
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConversorLongitudServicioReferencia.IConversorLongitudServicio")]
    public interface IConversorLongitudServicio
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversorLongitudServicio/ConvertirLongitud", ReplyAction="http://tempuri.org/IConversorLongitudServicio/ConvertirLongitudResponse")]
        ConversorLongitudServicioReferencia.ConvertirLongitudResponse ConvertirLongitud(ConversorLongitudServicioReferencia.ConvertirLongitudRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversorLongitudServicio/ConvertirLongitud", ReplyAction="http://tempuri.org/IConversorLongitudServicio/ConvertirLongitudResponse")]
        System.Threading.Tasks.Task<ConversorLongitudServicioReferencia.ConvertirLongitudResponse> ConvertirLongitudAsync(ConversorLongitudServicioReferencia.ConvertirLongitudRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertirLongitud", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ConvertirLongitudRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double valor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string unidadOrigen;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string unidadDestino;
        
        public ConvertirLongitudRequest()
        {
        }
        
        public ConvertirLongitudRequest(double valor, string unidadOrigen, string unidadDestino)
        {
            this.valor = valor;
            this.unidadOrigen = unidadOrigen;
            this.unidadDestino = unidadDestino;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertirLongitudResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ConvertirLongitudResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double ConvertirLongitudResult;
        
        public ConvertirLongitudResponse()
        {
        }
        
        public ConvertirLongitudResponse(double ConvertirLongitudResult)
        {
            this.ConvertirLongitudResult = ConvertirLongitudResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IConversorLongitudServicioChannel : ConversorLongitudServicioReferencia.IConversorLongitudServicio, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class ConversorLongitudServicioClient : System.ServiceModel.ClientBase<ConversorLongitudServicioReferencia.IConversorLongitudServicio>, ConversorLongitudServicioReferencia.IConversorLongitudServicio
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ConversorLongitudServicioClient() : 
                base(ConversorLongitudServicioClient.GetDefaultBinding(), ConversorLongitudServicioClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IConversorLongitudServicio.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConversorLongitudServicioClient(EndpointConfiguration endpointConfiguration) : 
                base(ConversorLongitudServicioClient.GetBindingForEndpoint(endpointConfiguration), ConversorLongitudServicioClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConversorLongitudServicioClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ConversorLongitudServicioClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConversorLongitudServicioClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ConversorLongitudServicioClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConversorLongitudServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ConversorLongitudServicioReferencia.ConvertirLongitudResponse ConvertirLongitud(ConversorLongitudServicioReferencia.ConvertirLongitudRequest request)
        {
            return base.Channel.ConvertirLongitud(request);
        }
        
        public System.Threading.Tasks.Task<ConversorLongitudServicioReferencia.ConvertirLongitudResponse> ConvertirLongitudAsync(ConversorLongitudServicioReferencia.ConvertirLongitudRequest request)
        {
            return base.Channel.ConvertirLongitudAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IConversorLongitudServicio))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IConversorLongitudServicio))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:42436/ec.edu.monster.servicios/ConversorLongitudServicio.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ConversorLongitudServicioClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IConversorLongitudServicio);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ConversorLongitudServicioClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IConversorLongitudServicio);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IConversorLongitudServicio,
        }
    }
}
